{"ast":null,"code":"var _jsxFileName = \"/home/oem/Desktop/PedroTech/client/src/pages/CreatePost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport CssPost from '../Css/CreatePost.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { AuthContext } from '../helpers/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreatePost() {\n  _s();\n  const {\n    authState\n  } = useContext(AuthContext);\n  let navigate = useNavigate();\n  //Questo mi serve per avere i valori che devo fornire tramite il modulo\n  const initialValues = {\n    title: '',\n    postText: ''\n  };\n\n  //mi controlla i vari campi\n  //string() perche` e` una stringa\n  //required() richiesto\n  //max e min valore massimo e minimo ammesso\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().min(3).max(15).required(\"campo obbligatorio\"),\n    postText: Yup.string().required()\n  });\n\n  //mi invia i dati del modulo\n  const onSubmit = data => {\n    console.log(data);\n\n    //praticamente questa axios prende un oggetto che passa, ovvero data\n    axios.post('http://localhost:3002/posts/aggiungiPost', {\n      title: data.title,\n      postText: data.postText,\n      username: authState.username\n    }).then(response => {\n      console.log(\"funziona\");\n    });\n  };\n  useEffect(() => {\n    if (!authState.status) {\n      navigate('/login');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main flex-container justify-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-form \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"items-post\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          onSubmit: onSubmit,\n          validationSchema: validationSchema,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"input-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Titolo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"field\",\n              type: \"text\",\n              id: \"inputTitle\",\n              placeholder: \"titolo\",\n              name: \"title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"title\",\n              component: \"span\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Testo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"field\",\n              type: \"text\",\n              id: \"inputTesto\",\n              placeholder: \"Testo\",\n              name: \"postText\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"postText\",\n              component: \"span\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Invia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePost, \"GG+iTc3+qvJdnwj1fnNYnj0BJBU=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useContext","useEffect","CssPost","Formik","Form","Field","ErrorMessage","Yup","axios","AuthContext","useNavigate","CreatePost","authState","navigate","initialValues","title","postText","validationSchema","object","shape","string","min","max","required","onSubmit","data","console","log","post","username","then","response","status"],"sources":["/home/oem/Desktop/PedroTech/client/src/pages/CreatePost.jsx"],"sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport CssPost from '../Css/CreatePost.css'\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\nimport * as Yup from 'yup'; \nimport axios from 'axios';\nimport {AuthContext} from '../helpers/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction CreatePost() {\n\n  const {authState} = useContext(AuthContext);\n  let navigate =  useNavigate();\n  //Questo mi serve per avere i valori che devo fornire tramite il modulo\n  const initialValues ={\n    title:'',\n    postText:'',\n   \n  };\n\n  //mi controlla i vari campi\n  //string() perche` e` una stringa\n  //required() richiesto\n  //max e min valore massimo e minimo ammesso\n  const validationSchema = Yup.object().shape({\n    title:Yup.string().min(3).max(15).required(\"campo obbligatorio\"),\n    postText: Yup.string().required(),\n\n  });\n\n  //mi invia i dati del modulo\n  const onSubmit = (data)=>{\n    console.log(data);\n\n    //praticamente questa axios prende un oggetto che passa, ovvero data\n    axios.post('http://localhost:3002/posts/aggiungiPost',\n    {\n      title:data.title,\n      postText: data.postText,\n      username: authState.username\n    }, ).then((response)=>{\n        console.log(\"funziona\");\n    });\n  }\n\n  useEffect(() => {\n\n    if(!authState.status){\n      navigate('/login');\n    }\n   \n  }, [])\n  \n\n\n\n  return (\n    <div className='main flex-container justify-content'>\n\n    <div className='container-form '>\n        <div className=\"items-post\">\n          <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\n            <Form className='input-form'>\n              <label >Titolo</label><br/>\n              <Field className='field' type=\"text\" id=\"inputTitle\" placeholder=\"titolo\" name=\"title\" />\n\n              <br/>\n              <ErrorMessage name=\"title\" component=\"span\"/>\n\n\n              <label >Testo</label><br/>\n              <Field className='field' type=\"text\"  id=\"inputTesto\" placeholder=\"Testo\" name=\"postText\" />\n\n              <br/>\n              <ErrorMessage name=\"postText\" component=\"span\"/>\n             \n            <div>\n              <button>Invia</button>\n            </div>\n            </Form>\n          </Formik>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CreatePost\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}