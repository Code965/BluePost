{"ast":null,"code":"var _jsxFileName = \"/home/oem/Desktop/PedroTech/client/src/pages/Post.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom'; //lo importo\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport post from '../Css/RecevingPost.css';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  let {\n    id\n  } = useParams();\n  const [post, setPost] = useState([]);\n  const [commenti, setCommenti] = useState([]);\n  const [newComment, setNewComment] = useState([]);\n  const addComment = () => {\n    axios.post(\"http://localhost:3002/commenti/inserisciCommento\", {\n      commentBody: newComment,\n      postId: id\n    }).then(response => {\n      const commentToAdd = {\n        commentBody: newComment\n      };\n      setNewComment([...commenti, commentToAdd]);\n    });\n  };\n  useEffect(() => {\n    axios.get(`http://localhost:3002/posts/mostraPost/${id}`).then(response => {\n      //la pagina post deve mostrare un certo tipo di post, quindi prendo l'id dalla url e faccio una get\n\n      console.log(response.data);\n      setPost(response.data);\n    });\n    axios.get(`http://localhost:3002/commenti/mostraCommenti/${id}`).then(response => {\n      console.log(response.data);\n      setCommenti(response.data);\n    });\n  }, []);\n\n  //POST COMMENTO\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-container  \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postC justify-content align-center flex-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemsC\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-postC flex-container justify-content align-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-centerC flex-container justify-content align-center\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"listC\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: post.postText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username-postC align-center flex-container \",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text\",\n            children: post.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commenti flex-container jutify-content  \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxInput flex-container justify-content  \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inpt\",\n            onChange: event => {\n              setNewComment(event.target.value);\n            },\n            type: \"textarea\",\n            name: \"commentBody\",\n            id: \"inputComment\",\n            placeholder: \"Commento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              addComment();\n            },\n            children: \"Aggiungi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"textTitle flex-container\",\n        children: \"COMMENTI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxComment flex-container \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"textC\",\n          children: commenti.map((comment, key) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"commentSection flex-container align-center justify-content\",\n              children: [\" \", comment.commentBody]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 31\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"+70WD8vrm1Nqw6AubzlAEYL1M6s=\", false, function () {\n  return [useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useParams","useEffect","useState","axios","post","useNavigate","Formik","Form","Field","ErrorMessage","Post","id","setPost","commenti","setCommenti","newComment","setNewComment","addComment","commentBody","postId","then","response","commentToAdd","get","console","log","data","title","postText","username","event","target","value","map","comment","key"],"sources":["/home/oem/Desktop/PedroTech/client/src/pages/Post.jsx"],"sourcesContent":["import React from 'react'\nimport {useParams} from 'react-router-dom'; //lo importo\nimport {useEffect, useState} from 'react'\nimport axios from 'axios';\nimport post  from '../Css/RecevingPost.css'\nimport {useNavigate} from 'react-router-dom'\n\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\n\nfunction Post() {\n\nlet { id } = useParams();   \nconst [post, setPost] = useState([])\nconst [commenti, setCommenti] = useState([]);\nconst [newComment , setNewComment] = useState([]);\n\nconst addComment = () =>{\n  axios.post(\"http://localhost:3002/commenti/inserisciCommento\", {\n\n        commentBody:newComment,\n        postId:id\n  }).then((response)=>{\n     \n    const commentToAdd = { commentBody: newComment}\n    setNewComment([...commenti, commentToAdd]);\n  });\n}\n\nuseEffect(() => {\n\n    axios.get(`http://localhost:3002/posts/mostraPost/${id}`).then((response)=>{\n\n    //la pagina post deve mostrare un certo tipo di post, quindi prendo l'id dalla url e faccio una get\n\n            console.log(response.data);\n            setPost(response.data);\n    });\n\n    axios.get(`http://localhost:3002/commenti/mostraCommenti/${id}`).then((response)=>{\n\n            console.log(response.data);\n            setCommenti(response.data);\n    });\n\n    }, []);\n\n\n\n    //POST COMMENTO\n\n\n  return (\n    <div className='flex-container  '>\n        <div className='postC justify-content align-center flex-container'>\n\n            <div className='itemsC'>\n            \n              <div className='nav-postC flex-container justify-content align-center'>\n                  <h1>{post.title}</h1>\n              </div>\n\n              <div className='post-centerC flex-container justify-content align-center'>\n                  <ul className='listC'>\n                  <li>{post.postText}</li>\n                  </ul>\n              </div>\n\n              <div className='username-postC align-center flex-container '>\n                  <h1 className='text'>{post.username}</h1>\n              </div>\n            </div>\n        </div>\n\n        \n        <div className='commenti flex-container jutify-content  '>\n          {/* Qui metto di inserire un commento */}\n\n              <div className='boxInput flex-container justify-content  '>\n               \n                    <div>\n\n                      <input className='inpt'  onChange={(event)=>{setNewComment(event.target.value)}} type=\"textarea\" name=\"commentBody\"  id=\"inputComment\" placeholder=\"Commento\" />\n                      <button onClick={()=>{addComment()}}>Aggiungi</button>\n\n                    </div>\n                  \n              </div>\n\n              <h1 className='textTitle flex-container'>COMMENTI</h1>\n\n\n               <div className='boxComment flex-container '>\n\n                  <div className='textC'>\n\n                    \n                      {commenti.map((comment,key)=>{\n\n                            return (\n                              \n                              <div className='commentSection flex-container align-center justify-content' key={key}> {comment.commentBody}</div>\n                              );\n                              \n                            \n                          })}\n                  </div>\n                </div>\n\n        </div>\n      \n        \n      </div>\n         \n  )\n}\n\nexport default Post"],"mappings":"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"},"metadata":{},"sourceType":"module"}